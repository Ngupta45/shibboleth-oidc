<!--

    Licensed to the University Corporation for Advanced Internet Development,
    Inc. (UCAID) under one or more contributor license agreements.  See the
    NOTICE file distributed with this work for additional information regarding
    copyright ownership. The UCAID licenses this file to You under the Apache
    License, Version 2.0 (the "License"); you may not use this file except in
    compliance with the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
    parent="intercept.abstract">

    <!--
    This is the intercept subflow. It handles invocation of all context-populated intercept subflows
    before returning control to the calling (profile) flow.
    -->

    <!--
    The select action is the "dispatching" step. Anything starting with "intercept/"
    is a flow descriptor that we send control to. If there are no flows available or
    remaining to be executed, control passes back to the calling (profile) flow.
    -->
    <action-state id="SelectInterceptFlow">
        <evaluate expression="FilterFlowsByNonBrowserSupport" />
        <evaluate expression="SelectInterceptFlow" />
        <evaluate expression="'proceed'" />

        <!-- Call a subflow with the same ID as the event. -->
        <transition on="#{currentEvent.id.startsWith('intercept/')}" to="CallInterceptFlow" />
        
        <transition on="proceed" to="proceed" />
    </action-state>

    <!--
    This invokes a flow. Anything but proceed is an error, otherwise control passes
    back to this flow to select another flow to be executed.
    -->
    <subflow-state id="CallInterceptFlow" subflow="#{currentEvent.id}">
        <input name="calledAsSubflow" value="true" />
        <transition on="proceed" to="WriteResultToStorage" />
    </subflow-state>
    
    <action-state id="WriteResultToStorage">
        <evaluate expression="WriteResultToStorage" />
        <evaluate expression="'proceed'" />
        <transition on="proceed" to="SelectInterceptFlow" />
    </action-state>

    <bean-import resource="intercept-beans.xml" />

</flow>
